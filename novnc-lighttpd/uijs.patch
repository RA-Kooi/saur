19a20,21
> import { local_settings } from "../settings.js";
> 
65,70c67,68
<         // We rely on modern APIs which might not be available in an
<         // insecure context
<         if (!window.isSecureContext) {
<             // FIXME: This gets hidden when connecting
<             UI.showStatus(_("HTTPS is required for full functionality"), 'error');
<         }
---
>         // In our installation this is usually sitting behind a proxy or VPN
>         // secure check removed
123c121,122
<         let autoconnect = WebUtil.getConfigVar('autoconnect', false);
---
>         let autoconnect = local_settings.autoconnect;
> 
156a156
> 
161,171d160
<         // if port == 80 (or 443) then it won't be present and should be
<         // set manually
<         let port = window.location.port;
<         if (!port) {
<             if (window.location.protocol.substring(0, 5) == 'https') {
<                 port = 443;
<             } else if (window.location.protocol.substring(0, 4) == 'http') {
<                 port = 80;
<             }
<         }
< 
173,186c162,175
<         UI.initSetting('host', window.location.hostname);
<         UI.initSetting('port', port);
<         UI.initSetting('encrypt', (window.location.protocol === "https:"));
<         UI.initSetting('view_clip', false);
<         UI.initSetting('resize', 'off');
<         UI.initSetting('quality', 6);
<         UI.initSetting('compression', 2);
<         UI.initSetting('shared', true);
<         UI.initSetting('view_only', false);
<         UI.initSetting('show_dot', false);
<         UI.initSetting('path', 'websockify');
<         UI.initSetting('repeaterID', '');
<         UI.initSetting('reconnect', false);
<         UI.initSetting('reconnect_delay', 5000);
---
>         UI.initSetting('host',            local_settings.host);
>         UI.initSetting('port',            local_settings.port);
>         UI.initSetting('encrypt',         local_settings.encrypt);
>         UI.initSetting('view_clip',       local_settings.view_clip);
>         UI.initSetting('resize',          local_settings.resize);
>         UI.initSetting('quality',         local_settings.quality);
>         UI.initSetting('compression',     local_settings.compression);
>         UI.initSetting('shared',          local_settings.shared);
>         UI.initSetting('view_only',       local_settings.view_only);
>         UI.initSetting('show_dot',        local_settings.show_dot);
>         UI.initSetting('path',            local_settings.path);
>         UI.initSetting('repeaterID',      local_settings.repeaterID);
>         UI.initSetting('reconnect',       local_settings.reconnect);
>         UI.initSetting('reconnect_delay', local_settings.reconnect_delay);
751,754c740
<         let val = WebUtil.getConfigVar(name);
<         if (val === null) {
<             val = WebUtil.readSetting(name, defVal);
<         }
---
>         let val = WebUtil.readSetting(name, defVal);
